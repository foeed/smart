[{"/home/foeed/smart-tek/proshop_django/frontend/src/index.js":"1","/home/foeed/smart-tek/proshop_django/frontend/src/reportWebVitals.js":"2","/home/foeed/smart-tek/proshop_django/frontend/src/store.js":"3","/home/foeed/smart-tek/proshop_django/frontend/src/App.js":"4","/home/foeed/smart-tek/proshop_django/frontend/src/reducers/productReducers.js":"5","/home/foeed/smart-tek/proshop_django/frontend/src/reducers/cartReducers.js":"6","/home/foeed/smart-tek/proshop_django/frontend/src/reducers/orderReducers.js":"7","/home/foeed/smart-tek/proshop_django/frontend/src/reducers/userReducers.js":"8","/home/foeed/smart-tek/proshop_django/frontend/src/screens/HomeScreen.js":"9","/home/foeed/smart-tek/proshop_django/frontend/src/components/Footer.js":"10","/home/foeed/smart-tek/proshop_django/frontend/src/screens/CartScreen.js":"11","/home/foeed/smart-tek/proshop_django/frontend/src/screens/ProductScreen.js":"12","/home/foeed/smart-tek/proshop_django/frontend/src/components/Header.js":"13","/home/foeed/smart-tek/proshop_django/frontend/src/screens/LoginScreen.js":"14","/home/foeed/smart-tek/proshop_django/frontend/src/screens/RegisterScreen.js":"15","/home/foeed/smart-tek/proshop_django/frontend/src/screens/ProfileScreen.js":"16","/home/foeed/smart-tek/proshop_django/frontend/src/screens/UserListScreen.js":"17","/home/foeed/smart-tek/proshop_django/frontend/src/screens/ShippingScreen.js":"18","/home/foeed/smart-tek/proshop_django/frontend/src/screens/UserEditScreen.js":"19","/home/foeed/smart-tek/proshop_django/frontend/src/screens/PlaceOrderScreen.js":"20","/home/foeed/smart-tek/proshop_django/frontend/src/screens/PaymentScreen.js":"21","/home/foeed/smart-tek/proshop_django/frontend/src/screens/ProductListScreen.js":"22","/home/foeed/smart-tek/proshop_django/frontend/src/screens/OrderScreen.js":"23","/home/foeed/smart-tek/proshop_django/frontend/src/screens/OrderListScreen.js":"24","/home/foeed/smart-tek/proshop_django/frontend/src/screens/ProductEditScreen.js":"25","/home/foeed/smart-tek/proshop_django/frontend/src/components/Message.js":"26","/home/foeed/smart-tek/proshop_django/frontend/src/components/Loader.js":"27","/home/foeed/smart-tek/proshop_django/frontend/src/components/Paginate.js":"28","/home/foeed/smart-tek/proshop_django/frontend/src/components/Product.js":"29","/home/foeed/smart-tek/proshop_django/frontend/src/components/Rating.js":"30","/home/foeed/smart-tek/proshop_django/frontend/src/components/ProductCarousel.js":"31","/home/foeed/smart-tek/proshop_django/frontend/src/components/SearchBox.js":"32","/home/foeed/smart-tek/proshop_django/frontend/src/components/FormContainer.js":"33","/home/foeed/smart-tek/proshop_django/frontend/src/components/CheckoutSteps.js":"34","/home/foeed/smart-tek/proshop_django/frontend/src/constants/cartConstants.js":"35","/home/foeed/smart-tek/proshop_django/frontend/src/constants/orderConstants.js":"36","/home/foeed/smart-tek/proshop_django/frontend/src/constants/productConstants.js":"37","/home/foeed/smart-tek/proshop_django/frontend/src/constants/userConstants.js":"38","/home/foeed/smart-tek/proshop_django/frontend/src/actions/cartActions.js":"39","/home/foeed/smart-tek/proshop_django/frontend/src/actions/productActions.js":"40","/home/foeed/smart-tek/proshop_django/frontend/src/actions/userActions.js":"41","/home/foeed/smart-tek/proshop_django/frontend/src/actions/orderActions.js":"42","/home/foeed/smart-tek/proshop_django/frontend/src/components/menu.js":"43","/home/foeed/smart-tek/proshop_django/frontend/src/screens/TypeScreen.js":"44"},{"size":594,"mtime":1703770170259,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1703770170259,"results":"47","hashOfConfig":"46"},{"size":2417,"mtime":1703770170263,"results":"48","hashOfConfig":"46"},{"size":2307,"mtime":1705231770796,"results":"49","hashOfConfig":"46"},{"size":4080,"mtime":1703770170259,"results":"50","hashOfConfig":"46"},{"size":1486,"mtime":1703770170259,"results":"51","hashOfConfig":"46"},{"size":4079,"mtime":1703770170259,"results":"52","hashOfConfig":"46"},{"size":3926,"mtime":1703770170259,"results":"53","hashOfConfig":"46"},{"size":2007,"mtime":1704040820353,"results":"54","hashOfConfig":"46"},{"size":1327,"mtime":1703778378476,"results":"55","hashOfConfig":"46"},{"size":4927,"mtime":1705332024294,"results":"56","hashOfConfig":"46"},{"size":11555,"mtime":1705421059852,"results":"57","hashOfConfig":"46"},{"size":3038,"mtime":1705337875539,"results":"58","hashOfConfig":"46"},{"size":2578,"mtime":1705413644935,"results":"59","hashOfConfig":"46"},{"size":3990,"mtime":1705337633576,"results":"60","hashOfConfig":"46"},{"size":6385,"mtime":1705338407784,"results":"61","hashOfConfig":"46"},{"size":3511,"mtime":1703770170259,"results":"62","hashOfConfig":"46"},{"size":3024,"mtime":1705413472273,"results":"63","hashOfConfig":"46"},{"size":3912,"mtime":1703770170259,"results":"64","hashOfConfig":"46"},{"size":7087,"mtime":1705414217992,"results":"65","hashOfConfig":"46"},{"size":2401,"mtime":1705354967325,"results":"66","hashOfConfig":"46"},{"size":5007,"mtime":1703770170259,"results":"67","hashOfConfig":"46"},{"size":8967,"mtime":1705422586405,"results":"68","hashOfConfig":"46"},{"size":3668,"mtime":1705356870582,"results":"69","hashOfConfig":"46"},{"size":7916,"mtime":1703770170259,"results":"70","hashOfConfig":"46"},{"size":228,"mtime":1703770170259,"results":"71","hashOfConfig":"46"},{"size":458,"mtime":1703770170259,"results":"72","hashOfConfig":"46"},{"size":859,"mtime":1703770170259,"results":"73","hashOfConfig":"46"},{"size":940,"mtime":1705420367311,"results":"74","hashOfConfig":"46"},{"size":1886,"mtime":1703770170259,"results":"75","hashOfConfig":"46"},{"size":843,"mtime":1703789777288,"results":"76","hashOfConfig":"46"},{"size":1582,"mtime":1703956644247,"results":"77","hashOfConfig":"46"},{"size":378,"mtime":1703770170259,"results":"78","hashOfConfig":"46"},{"size":2192,"mtime":1705340622824,"results":"79","hashOfConfig":"46"},{"size":287,"mtime":1703770170259,"results":"80","hashOfConfig":"46"},{"size":1240,"mtime":1703770170259,"results":"81","hashOfConfig":"46"},{"size":1502,"mtime":1703770170259,"results":"82","hashOfConfig":"46"},{"size":1479,"mtime":1703770170259,"results":"83","hashOfConfig":"46"},{"size":1310,"mtime":1703770170259,"results":"84","hashOfConfig":"46"},{"size":6690,"mtime":1705242927666,"results":"85","hashOfConfig":"46"},{"size":7370,"mtime":1703770170259,"results":"86","hashOfConfig":"46"},{"size":6009,"mtime":1703770170259,"results":"87","hashOfConfig":"46"},{"size":1640,"mtime":1705231713073,"results":"88","hashOfConfig":"46"},{"size":2585,"mtime":1705244783194,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"7pjj0j",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"92"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"92"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"92"},"/home/foeed/smart-tek/proshop_django/frontend/src/index.js",[],["194","195"],"/home/foeed/smart-tek/proshop_django/frontend/src/reportWebVitals.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/store.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/App.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/reducers/productReducers.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/reducers/cartReducers.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/reducers/orderReducers.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/reducers/userReducers.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/screens/HomeScreen.js",["196","197"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Product from '../components/Product';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Paginate from '../components/Paginate';\nimport ProductCarousel from '../components/ProductCarousel';\nimport CategoryMenu from '../components/menu';\nimport { listProducts } from '../actions/productActions';\n\nfunction HomeScreen({ history }) {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { error, loading, products, page, pages } = productList;\n\n  let keyword = history.location.search;\n\n  useEffect(() => {\n    dispatch(listProducts(keyword));\n  }, [dispatch, keyword]);\n\n  return (\n    <div className=\"home-screen\">\n      <Row>\n        <Col md={3}>\n          <div className=\"category-menu-box\">\n            <CategoryMenu />\n          </div>\n        </Col>\n\n        <Col md={9}>\n          <div className=\"product-carousel\">\n            {<ProductCarousel />}\n          </div>\n          </Col>\n          <div className=\"latest-products\">\n            {loading && <Loader />}\n  \n            {error && <Message variant=\"danger\">{error}</Message>}\n  \n            {!loading && !error && products.length === 0 && (\n              <Message>No products found.</Message>\n            )}\n  \n            {!loading && !error && products.length > 0 && (\n              <>\n                <Row>\n                  {products.map((product) => (\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={4}>\n                      <Product product={product} />\n                    </Col>\n                  ))}\n                </Row>\n  \n                <Paginate page={page} pages={pages} keyword={keyword} />\n              </>\n            )}\n          </div>\n        \n      </Row>\n    </div>\n  );\n}\n\nexport default HomeScreen;\n","/home/foeed/smart-tek/proshop_django/frontend/src/components/Footer.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/screens/CartScreen.js",["198"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\n\n\n\n\n\n  \n\n\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n    const checkoutHandlerX = () => {\n        history.push('/redirect=shipping')\n    }\n    return (\n        <Row>\n          <span></span>  <span></span>  <span></span>\n          <span></span>  <span></span>  <span></span>\n            <Col md={8}>\n                <h1>Panier</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                    Votre panier est vide.  <Link to='/'>Retourner à la boutique</Link>\n                    </Message>\n                ) : (\n                        <ListGroup variant='flush'>\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image src={item.image} alt={item.name} fluid rounded />\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n\n                                        <Col md={2}>\n                                            {item.price}DT\n                                        </Col>\n\n                                        <Col md={3}>\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={item.qty}\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                            >\n                                                {\n\n                                                    [...Array(item.countInStock).keys()].map((x) => (\n                                                        <option key={x + 1} value={x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    ))\n                                                }\n\n                                            </Form.Control>\n                                        </Col>\n\n                                        <Col md={1}>\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>RÉSUMÉ DU PANIER</h2>\n                            <h4>Sous-total</h4>\n                            {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}DT\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                        <Button\n                            type='button'\n                            className='btn-danger'\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            COMMANDER \n                        </Button>\n                    </ListGroup.Item>\n\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","/home/foeed/smart-tek/proshop_django/frontend/src/screens/ProductScreen.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/components/Header.js",["199"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Navbar, Nav, Container, Badge, NavDropdown } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faShoppingCart, faUser, faBars } from '@fortawesome/free-solid-svg-icons';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport SearchBox from './SearchBox';\nimport { logout } from '../actions/userActions';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  // Assuming you have a 'cart' property in your Redux store state\n  const cartItems = useSelector((state) => state.cart.cartItems);\n\n  // Calculate the total number of items in the cart\n  const cartItemsCount = cartItems.reduce((acc, item) => acc + item.qty, 0);\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <header>\n      <Navbar bg=\"light\" expand=\"lg\" className=\"border-bottom\">\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>\n              <img\n                src=\"/images/logo.png\" // Replace with the actual path to your logo image\n               \n                height=\"70\"\n                className=\"d-inline-block align-top\"\n              />\n            </Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\n            <FontAwesomeIcon icon={faBars} />\n          </Navbar.Toggle>\n\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <SearchBox />\n\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <FontAwesomeIcon icon={faShoppingCart} className=\"mr-1\" />\n                  panier{' '}\n                  {cartItemsCount > 0 && (\n                    <Badge variant=\"danger\" className=\"ml-1\">\n                      {cartItemsCount}\n                    </Badge>\n                  )}\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>DECONNEXION</NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <FontAwesomeIcon icon={faUser} className=\"mr-1\" />\n                    CONNECTER\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <span></span>  <span></span>  <span></span>\n          <span></span>  <span></span>  <span></span>          <span></span>  <span></span>  <span></span>\n          <span></span>  <span></span>  <span></span>\n    </header>\n  );\n};\n\nexport default Header;\n","/home/foeed/smart-tek/proshop_django/frontend/src/screens/LoginScreen.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/screens/RegisterScreen.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/screens/ProfileScreen.js",["200"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password !== confirmPassword) {\n            setMessage('Les mots de passe ne correspondent pas')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>Profil </h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Nom</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Entrez votre nom'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Téléphone mobile</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Entrez votre Téléphone mobile'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Mot de passe</Form.Label>\n                        <Form.Control\n                            type='password'\n                           \n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirmer  mot de passe</Form.Label>\n                        <Form.Control\n                            type='password'\n                            \n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Mettre à jour\n                    </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>Mes commandes</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                    <Table striped responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Date</th>\n                                <th>Total</th>\n                                <th>Payé</th>\n                                <th>Livré</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>${order.totalPrice}</td>\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                    )}</td>\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}`}>\n                                            <Button className='btn-sm'>Détails</Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","/home/foeed/smart-tek/proshop_django/frontend/src/screens/UserListScreen.js",["201"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","/home/foeed/smart-tek/proshop_django/frontend/src/screens/ShippingScreen.js",["202","203"],"import React, { useState, useEffect } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { saveShippingAddress } from '../actions/cartActions';\n\nfunction ShippingScreen({ history }) {\n    const cart = useSelector(state => state.cart);\n    const { shippingAddress } = cart;\n\n    const dispatch = useDispatch();\n\n    const [address, setAddress] = useState(shippingAddress.address || '');\n    const [city, setCity] = useState(shippingAddress.city || '');\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode || '');\n    const [country, setCountry] = useState(shippingAddress.country || '');\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(saveShippingAddress({ address, city, postalCode, country }));\n        history.push('/payment');\n    };\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Livraison</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='address'>\n                    <Form.Label>Adresse</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Saisir adresse '\n                        value={address}\n                        onChange={e => setAddress(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>Ville</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Saisir la ville'\n                        value={city}\n                        onChange={e => setCity(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Code Postal</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Saisir le code postal'\n                        value={postalCode}\n                        onChange={e => setPostalCode(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Pays</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Saisir le pays'\n                        value={country}\n                        onChange={e => setCountry(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continuer\n                </Button>\n            </Form>\n        </FormContainer>\n    );\n}\n\nexport default ShippingScreen;\n","/home/foeed/smart-tek/proshop_django/frontend/src/screens/UserEditScreen.js",["204"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","/home/foeed/smart-tek/proshop_django/frontend/src/screens/PlaceOrderScreen.js",["205","206"],"import React, { useState, useEffect } from 'react';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions';\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\n\nfunction PlaceOrderScreen({ history }) {\n    const orderCreate = useSelector(state => state.orderCreate);\n    const { order, error, success } = orderCreate;\n\n    const dispatch = useDispatch();\n    const cart = useSelector(state => state.cart);\n\n    // Calcul du total, frais de livraison et taxes\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2);\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2);\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2);\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2);\n\n    // Redirection vers la page de paiement si aucune méthode de paiement n'est sélectionnée\n    if (!cart.paymentMethod) {\n        history.push('/payment');\n    }\n\n    useEffect(() => {\n        // Redirection vers la page de commande en cas de succès\n        if (success) {\n            history.push(`/order/${order._id}`);\n            dispatch({ type: ORDER_CREATE_RESET });\n        }\n    }, [success, history]);\n\n    // Fonction pour placer la commande\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }));\n    };\n\n    return (\n        <div>\n            {/* Affichage des étapes de la commande */}\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Adresse de Livraison</h2>\n                            <p>\n                                <strong>Adresse: </strong>\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city} {' '}\n                                {cart.shippingAddress.postalCode}, {' '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Méthode de Paiement</h2>\n                            <p>\n                                <strong>Méthode: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Articles de Commande</h2>\n                            {cart.cartItems.length === 0 ? (\n                                <Message variant='info'>\n                                    Votre panier est vide\n                                </Message>\n                            ) : (\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={2}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n\n                                                <Col md={4}>\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </Col>\n\n                                                <Col md={6}>\n                                                    {item.qty} X {item.price}DT = {(item.qty * item.price).toFixed(2)} DT\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Récapitulatif de la Commande</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Articles:</Col>\n                                    <Col>{cart.itemsPrice}DT</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Livraison:</Col>\n                                    <Col>{cart.shippingPrice}DT</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Taxes:</Col>\n                                    <Col>{cart.taxPrice}DT</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>{cart.totalPrice}DT</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                {/* Affichage des messages d'erreur */}\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                {/* Bouton de placement de commande */}\n                                <Button\n                                    type='button'\n                                    className='btn btn-primary btn-block'\n                                    disabled={cart.cartItems.length === 0 || orderCreate.loading}\n                                    onClick={placeOrder}\n                                >\n                                    Passer la Commande\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default PlaceOrderScreen;\n","/home/foeed/smart-tek/proshop_django/frontend/src/screens/PaymentScreen.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/screens/ProductListScreen.js",["207"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","/home/foeed/smart-tek/proshop_django/frontend/src/screens/OrderScreen.js",["208"],"import React, { useState, useEffect } from 'react';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions';\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id;\n    const dispatch = useDispatch();\n\n    const [sdkReady, setSdkReady] = useState(false);\n\n    const orderDetails = useSelector(state => state.orderDetails);\n    const { order, error, loading } = orderDetails;\n\n    const orderPay = useSelector(state => state.orderPay);\n    const { loading: loadingPay, success: successPay } = orderPay;\n\n    const orderDeliver = useSelector(state => state.orderDeliver);\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2);\n    }\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src =\n            'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn';\n        script.async = true;\n        script.onload = () => {\n            setSdkReady(true);\n        };\n        document.body.appendChild(script);\n    };\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET });\n            dispatch({ type: ORDER_DELIVER_RESET });\n\n            dispatch(getOrderDetails(orderId));\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript();\n            } else {\n                setSdkReady(true);\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver]);\n\n    const successPaymentHandler = paymentResult => {\n        dispatch(payOrder(orderId, paymentResult));\n    };\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order));\n    };\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n        <div>\n            <h1>Commande : {order.Id}</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Livraison</h2>\n                            <p>\n                                <strong>Nom :</strong> {order.user.name}\n                            </p>\n                            <p>\n                                <strong>Email :</strong>{' '}\n                                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                            </p>\n                            <p>\n                                <strong>Livraison :</strong>{' '}\n                                {`${order.shippingAddress.address}, ${order.shippingAddress.city} ${order.shippingAddress.postalCode}, ${order.shippingAddress.country}`}\n                            </p>\n                            {order.isDelivered ? (\n                                <Message variant='success'>Livré le {order.deliveredAt}</Message>\n                            ) : (\n                                <Message variant='warning'>Non livré</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Méthode de Paiement</h2>\n                            <p>\n                                <strong>Méthode :</strong> {order.paymentMethod}\n                            </p>\n                            {order.isPaid ? (\n                                <Message variant='success'>Payé le {order.paidAt}</Message>\n                            ) : (\n                                <Message variant='warning'>Non payé</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Articles de la Commande</h2>\n                            {order.orderItems.length === 0 ? (\n                                <Message variant='info'>La commande est vide</Message>\n                            ) : (\n                                <ListGroup variant='flush'>\n                                    {order.orderItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </Col>\n\n                                                <Col md={4}>\n                                                    {`${item.qty} X ${item.price} DT = ${(item.qty * item.price).toFixed(2)} DT`}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Résumé de la Commande</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Articles :</Col>\n                                    <Col>{`${order.itemsPrice} DT`}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Livraison :</Col>\n                                    <Col>{`${order.shippingPrice} DT`}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Taxe :</Col>\n                                    <Col>{`${order.taxPrice} DT`}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total :</Col>\n                                    <Col>{`${order.totalPrice} DT`}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader />}\n\n                                    {!sdkReady ? (\n                                        <Loader />\n                                    ) : (\n                                        <PayPalButton\n                                            amount={order.totalPrice}\n                                            onSuccess={successPaymentHandler}\n                                        />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n                        </ListGroup>\n                        {loadingDeliver && <Loader />}\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn btn-block'\n                                    onClick={deliverHandler}\n                                >\n                                    Marquer comme Livré\n                                </Button>\n                            </ListGroup.Item>\n                        )}\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default OrderScreen;\n","/home/foeed/smart-tek/proshop_django/frontend/src/screens/OrderListScreen.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/screens/ProductEditScreen.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/components/Message.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/components/Loader.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/components/Paginate.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/components/Product.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/components/Rating.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/components/ProductCarousel.js",["209"],"import React from 'react';\nimport { Image, Carousel } from 'react-bootstrap';\nimport Loader from './Loader';\nimport Message from './Message';\n\nfunction ProductCarousel() {\n  const localImageContext = require.context('../images', false, /\\.(jpg|jpeg|png)$/);\n  const localImagePaths = localImageContext.keys();\n\n  return (\n    <Carousel pause='hover'className='bg-dark' interval={5000}>\n      {localImagePaths.length === 0 ? (\n        <Message variant='info'>No local images found.</Message>\n      ) : (\n        localImagePaths.map((imagePath, index) => (\n          <Carousel.Item key={index}>\n            <Image\n              src={localImageContext(imagePath).default}\n              alt={`Local Image ${index}`}\n            \n            />\n          </Carousel.Item>\n        ))\n      )}\n    </Carousel>\n  );\n}\n\nexport default ProductCarousel;\n","/home/foeed/smart-tek/proshop_django/frontend/src/components/SearchBox.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/components/FormContainer.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/components/CheckoutSteps.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/constants/cartConstants.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/constants/orderConstants.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/constants/productConstants.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/constants/userConstants.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/actions/cartActions.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/actions/productActions.js",["210"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n// ... Other imports and action types ...\n\nexport const listProductsByType = (type) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST });\n\n        const { data } = await axios.get(`/api/products?type=${type}`);\n        console.log('Fetched products data:', data);\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        const errorMessage =\n            error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message;\n\n        console.error('Error fetching products:', errorMessage);\n\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: errorMessage,\n        });\n    }\n};\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/home/foeed/smart-tek/proshop_django/frontend/src/actions/userActions.js",["211"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/home/foeed/smart-tek/proshop_django/frontend/src/actions/orderActions.js",["212","213","214"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/home/foeed/smart-tek/proshop_django/frontend/src/components/menu.js",[],"/home/foeed/smart-tek/proshop_django/frontend/src/screens/TypeScreen.js",["215","216","217","218","219","220"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams ,  Link  } from 'react-router-dom';\nimport { listProductsByType } from '../actions/productActions';\nimport { Container, Row, Col, Alert, Spinner , Button } from 'react-bootstrap'; // Import React Bootstrap components\nimport Product from '../components/Product';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Paginate from '../components/Paginate';\nimport ProductCarousel from '../components/ProductCarousel';\nimport CategoryMenu from '../components/menu';\nimport { listProducts } from '../actions/productActions';\nconst TypeScreen = () => {\n    const { type } = useParams();\n    const dispatch = useDispatch();\n\n    const productList = useSelector((state) => state.productList);\n    const { loading, error, products } = productList;\n\n    useEffect(() => {\n        dispatch(listProductsByType(type));\n    }, [dispatch, type]);\n   \n    // Filter products based on the specified type\n    const filteredProducts = products.filter(product => product.type.toLowerCase() === type.toLowerCase());\n\n    return (\n        <div className=\"home-screen\">\n        <Row>\n          <Col md={3}>\n            <div className=\"category-menu-box\">\n              <CategoryMenu />\n            </div>\n          </Col>\n  \n          <Col md={9}>\n            <div className=\"product-carousel\">\n              {<ProductCarousel />}\n            </div>\n            </Col>\n            <Container>\n              <h2 className=\"mt-3\">{`Products with type: ${type}`}</h2>\n  \n              {loading && <Spinner animation=\"border\" role=\"status\" className=\"mt-3\">\n                  <span className=\"visually-hidden\">Loading...</span>\n              </Spinner>}\n  \n              {error && <Alert variant=\"danger\" className=\"mt-3\">{error}</Alert>}\n  \n              {filteredProducts.length === 0 && !loading && (\n                  <Alert variant=\"info\" className=\"mt-3\">\n                      No products found for this type.\n                  </Alert>\n              )}\n  \n              {filteredProducts.length > 0 && (\n                  <Row className=\"mt-3\">\n                      {filteredProducts.map((product) => (\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                              <Product product={product} />\n                          </Col>\n                      ))}\n                  </Row>\n              )}\n          </Container>\n          \n        </Row>\n      </div>\n    );\n};\n\nexport default TypeScreen;\n",{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":3,"column":20,"nodeType":"227","messageId":"228","endLine":3,"endColumn":26},{"ruleId":"225","severity":1,"message":"229","line":4,"column":10,"nodeType":"227","messageId":"228","endLine":4,"endColumn":14},{"ruleId":"225","severity":1,"message":"230","line":39,"column":11,"nodeType":"227","messageId":"228","endLine":39,"endColumn":27},{"ruleId":"231","severity":1,"message":"232","line":31,"column":15,"nodeType":"233","endLine":36,"endColumn":17},{"ruleId":"225","severity":1,"message":"229","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":14},{"ruleId":"225","severity":1,"message":"234","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":25},{"ruleId":"225","severity":1,"message":"235","line":1,"column":27,"nodeType":"227","messageId":"228","endLine":1,"endColumn":36},{"ruleId":"225","severity":1,"message":"236","line":2,"column":24,"nodeType":"227","messageId":"228","endLine":2,"endColumn":27},{"ruleId":"237","severity":1,"message":"238","line":43,"column":8,"nodeType":"239","endLine":43,"endColumn":46,"suggestions":"240"},{"ruleId":"225","severity":1,"message":"234","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":25},{"ruleId":"237","severity":1,"message":"241","line":34,"column":8,"nodeType":"239","endLine":34,"endColumn":26,"suggestions":"242"},{"ruleId":"225","severity":1,"message":"234","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":25},{"ruleId":"237","severity":1,"message":"243","line":62,"column":8,"nodeType":"239","endLine":62,"endColumn":62,"suggestions":"244"},{"ruleId":"225","severity":1,"message":"245","line":3,"column":8,"nodeType":"227","messageId":"228","endLine":3,"endColumn":14},{"ruleId":"225","severity":1,"message":"246","line":144,"column":17,"nodeType":"227","messageId":"228","endLine":144,"endColumn":21},{"ruleId":"225","severity":1,"message":"247","line":21,"column":5,"nodeType":"227","messageId":"228","endLine":21,"endColumn":30},{"ruleId":"225","severity":1,"message":"248","line":14,"column":5,"nodeType":"227","messageId":"228","endLine":14,"endColumn":20},{"ruleId":"225","severity":1,"message":"249","line":19,"column":5,"nodeType":"227","messageId":"228","endLine":19,"endColumn":24},{"ruleId":"225","severity":1,"message":"250","line":28,"column":5,"nodeType":"227","messageId":"228","endLine":28,"endColumn":24},{"ruleId":"225","severity":1,"message":"229","line":3,"column":23,"nodeType":"227","messageId":"228","endLine":3,"endColumn":27},{"ruleId":"225","severity":1,"message":"226","line":5,"column":48,"nodeType":"227","messageId":"228","endLine":5,"endColumn":54},{"ruleId":"225","severity":1,"message":"245","line":7,"column":8,"nodeType":"227","messageId":"228","endLine":7,"endColumn":14},{"ruleId":"225","severity":1,"message":"251","line":8,"column":8,"nodeType":"227","messageId":"228","endLine":8,"endColumn":15},{"ruleId":"225","severity":1,"message":"252","line":9,"column":8,"nodeType":"227","messageId":"228","endLine":9,"endColumn":16},{"ruleId":"225","severity":1,"message":"253","line":12,"column":10,"nodeType":"227","messageId":"228","endLine":12,"endColumn":22},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'checkoutHandlerX' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'Col' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["256"],"React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["257"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["258"],"'Loader' is defined but never used.","'data' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'Message' is defined but never used.","'Paginate' is defined but never used.","'listProducts' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"265","text":"266"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"267","text":"268"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"269","text":"270"},[1432,1470],"[user, userId, successUpdate, history, dispatch]",[1493,1511],"[success, history, order._id, dispatch]",[2315,2369],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]"]